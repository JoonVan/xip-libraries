#Inventor V2.1 ascii

Separator {
    OrthographicCamera {
	position	0 0 1
	height	16
    }
    SoRadBuilderConnections {
	fields [  ]
    }
    SoRadBuilderNodeSelection {
	fields [  ]
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	0.6 -0.3 2.78885 0.5
	    flags	()
	    autoPanelPos	539 114 0 0
	    node		    DEF +0 SoXipMPRRender {
		fields [ SoXipSFDataImage volume ]
		volume	"DATA" =
		    DEF +1 SoXipVolumeDicom {
			inputs [ SoXipMFDataDicom input ]
			input	[ "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA",
					  "DATA" ] =
			    DEF +2 SoXipSortDicom {
				inputs [ SoXipMFDataDicom input ]
				input	[ "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA",
						  "DATA" ] =
				    DEF +3 SoXipLoadDicom {
					inputs [ MFString name ]
					name	"C:\Data\CTHeart2"
					outputs [ SoXipMFDataDicom dicom ]
				    }
				    . dicom

				outputs [ SoXipMFDataDicom output ]
			    }
			    . output

			outputs [ SoXipSFDataImage output ]
		    }
		    . output

	    }

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-2.1 -0.3 -0.100001 0.5
	    flags	()
	    autoPanelPos	597 425 0 0
	    node		    DEF +4 SoXipLut {
		fields [ SFEnum inputMode, SFShort bitsUsed, MFColor arrayColor, MFFloat arrayAlpha ]
		inputMode	RAMP
		bitsUsed	12
		arrayColor	[  ]
		arrayAlpha	[  ]
	    }

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFNode node ]
	    placement	-8.1 -0.3 -6.1 0.5
	    flags	()
	    node		    DEF +5 SoXipMprPlane {
		fields [ SFMatrix plane, SFVec3f center,  ]
		plane	9.03193e-009 -0.278474 -1.95086e-009 0
			-1.14703e-008 1.77007e-009 0.278474 0
			-0.278474 7.93452e-009 1.28976e-008 0
			0.5 0.851728 0.486018 1
		center	0.5 0.5 0.5
	    }

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	1.2 -4.8 3.2 -4
	    flags	()
	    autoPanelPos	208 515 0 0
	    engine		    USE +3

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	0.9 -2.1 3.34892 -1.3
	    flags	()
	    autoPanelPos	622 449 0 0
	    engine		    USE +1

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	1.2 -3.3 3.2 -2.5
	    flags	()
	    autoPanelPos	184 415 0 0
	    engine		    USE +2

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-4.2 5.4 -2.2 6.2
	    flags	()
	    autoPanelPos	391 189 0 0
	    node		    Separator {
		USE +5
		DEF +6 SoXipMprExaminer {
		    orientation	RIGHT
		    mouse	BUTTON2
		    mode	PANZOOM
		    intersection	FREE
		    rotatePinpoint	FALSE
		    pointTo	FALSE
		    border	FALSE
		    dogEar	TRUE
		    orientationCube	TRUE
		    camera			    OrthographicCamera {
			position	0.5 0.851728 0.486018
			orientation	-0.57735 0.57735 0.57735  4.18879
			nearDistance	-1
			farDistance	1
			focalDistance	0
			height	0.278474
		    }

		    complexity			    Complexity {
			value	0.5
			textureQuality	0.5
		    }

		    intersectionManip			    SoXipMprIntersectionManip {
			fields [ SFBool isManipulating, SFBool on, SFEnum mode ]
			isManipulating	FALSE
			on	TRUE
			mode	FREE
		    }

		    borderNode			    SoXipViewportBorder {
			fields [ SFColor activeColor, SFColor inactiveColor,  ]
			activeColor	1 1 1
			inactiveColor	1 1 1
		    }

		    dogEarNode			    DEF +7 SoXipDogEar {
			fields [  ]
		    }

		    orientationNode			    DEF +8 SoXipOrientationCube {
			fields [  ]
		    }

		    dogEarSwitch			    Switch {
			whichChild	0
			USE +7
		    }

		    orientationSwitch			    Switch {
			whichChild	0
			USE +8
		    }

		}
		USE +4
		USE +0
	    }

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-5.1 -0.3 -2.7161 0.5
	    flags	()
	    autoPanelPos	150 369 0 0
	    node		    USE +6

	}
    }
}
