#Inventor V2.1 ascii

Separator {
    OrthographicCamera {
	position	-2.4658 5.04615 9.02358
	nearDistance	-0
	farDistance	18.0472
	focalDistance	9.02358
	height	11.74
    }
    SoRadBuilderConnections {
	fields [  ]
    }
    SoRadBuilderNodeSelection {
	fields [  ]
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f viewPos, SFNode node ]
	    placement	-2.4 7.2 1.6 8
	    flags	()
	    viewPos	700 338 385 385
	    node		    DEF +0 Separator {
		DEF +1 SoXipTextureUnit {
		    fields [ SFBool autoGenerate ]
		    autoGenerate	FALSE
		}
		DEF +2 SoXipTexture {
		    fields [ SoXipSFDataImage image, SFEnum wrapS, SFEnum wrapT, SFEnum wrapR,
			    SFEnum filter, SFEnum model, SFEnum internalFormat, SFVec3f textureSize ]
		    image	"DATA" =
			DEF +3 SoXipVolumeDicom {
			    inputs [ SoXipMFDataDicom input ]
			    input	[ "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA",
					      "DATA" ] =
				DEF +4 SoXipSortDicom {
				    inputs [ SoXipMFDataDicom input ]
				    input	[ "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA",
						      "DATA" ] =
					DEF +5 SoXipLoadDicom {
					    inputs [ MFString name ]
					    name	"C:\home\work\datasets\wh\CTHeart2"
					    outputs [ SoXipMFDataDicom dicom ]
					}
					. dicom

				    outputs [ SoXipMFDataDicom output ]
				}
				. output

			    outputs [ SoXipSFDataImage output ]
			}
			. output

		    wrapS	CLAMP_TO_EDGE
		    wrapT	CLAMP_TO_EDGE
		    wrapR	CLAMP_TO_EDGE
		    filter	LINEAR
		    model	REPLACE
		    internalFormat	LUMINANCE16
		    textureSize	512 512 241
		}
		DEF +6 SoXipTextureUnit {
		    fields [ SFInt32 textureStage, SFBool autoGenerate ]
		    textureStage	1
		    autoGenerate	FALSE
		}
		DEF +7 SoXipLut {
		    fields [ SFEnum inputMode, SFEnum fileMode, SFShort bitsUsed, SFFloat rampWidth,
			    SFFloat rampCenter, SFFloat alphaFactor, SFFloat slopeCenter, SFColor colorMiddle,
			    SFColor colorTop, SFString fileIn, SFShort fileEntries, MFColor arrayColor,
			    MFFloat arrayAlpha ]
		    inputMode	FILE
		    fileMode	FLOAT_COMMA
		    bitsUsed	12
		    rampWidth	0.5
		    rampCenter	0.5
		    alphaFactor	0.4
		    slopeCenter	0
		    colorMiddle	0.5 0.5 0.5
		    colorTop	0.6 0.6 0.6
		    fileIn	"C:\home\work\datasets\wh\Lut\default.txt"
		    fileEntries	4096
		    arrayColor	[  ]
		    arrayAlpha	[  ]
		}
		DEF +8 SoXipLutTexture {
		    fields [  ]
		}
		DEF +9 SoXipLoadShaders {
		    fields [ SFString fpFilename, SFString vpFilename, SFString fpDefines,  ]
		    fpFilename	"shade_tf_fp.glsl"
		    vpFilename	"simple_vp.glsl"
		    fpDefines	"k"
		}
		DEF +10 SoXipUniformInt {
		    fields [ SFString name,  ]
		    name	"volume"
		}
		DEF +11 SoXipUniformInt {
		    fields [ SFString name, MFInt32 value ]
		    name	"transferFunc"
		    value	1
		}
		DEF +12 SoXipSlicer {
		    fields [ SFInt32 numSlicesX, SFInt32 numSlicesY, SFInt32 numSlicesZ, SFInt32 numSlices,
			    SFEnum slicing, SFEnum mode, SFEnum compositing ]
		    numSlicesX	100
		    numSlicesY	100
		    numSlicesZ	100
		    numSlices	400
		    slicing	VIEW_ALIGNED
		    mode	VRT
		    compositing	BACK_TO_FRONT
		}
	    }

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f viewPos, SFNode node ]
	    placement	-4.2 9.3 -2.2 10.1
	    flags	()
	    viewPos	486 200 748 491
	    node		    Separator {
		DEF +13 SoXipExaminer {
		    mode	ROTATE
		    viewBoundingBox	185.001 0 0 0
			    0 185.001 0 0
			    0 0 120 0
			    -66.5 -109.5 -30.5 1
		    complexity			    Complexity {
			value	0.5
			textureQuality	0.5
		    }

		    orthoCamera			    DEF +14 OrthographicCamera {
		    }

		    perspectiveCamera			    DEF +15 PerspectiveCamera {
			position	-95.9342 -95.2198 -286.31
			orientation	-0.279849 0.95807 -0.0615403  3.55392
			nearDistance	203.532
			farDistance	491.37
			focalDistance	347.451
			heightAngle	0.785398
		    }

		    borderSwitch			    Switch {
		    }

		    cameraSwitch			    Switch {
			whichChild	1
			USE +14
			USE +15
		    }

		}
		DEF +16 MatrixTransform {
		    matrix	185.001 0 0 0
			    0 185.001 0 0
			    0 0 120 0
			    -66.5 -109.5 -30.5 1 =
			DEF +17 SoXipImageAttributes {
			    inputs [ SoXipSFDataImage image ]
			    image	"DATA" =
				USE +3
				. output

			    outputs [ SFMatrix modelMatrix, SFShort width, SFShort height, SFShort depth,
				    SFShort bitsStored, SFMatrix defaultOrientation, SFShort orthoScanOrientation, SFMatrix orthoOrientation1,
				    SFMatrix orthoOrientation2, SFMatrix orthoOrientation3, SFVec3f defaultCenter ]
			}
			. modelMatrix

		}
		USE +0
	    }

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	1.5 1.5 3.91 2.3
	    flags	()
	    autoPanelPos	531 459 0 0
	    node		    USE +9

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	3.3 5.7 5.3 6.5
	    flags	SHOW_AUTOPANEL
	    autoPanelPos	663 133 0 0
	    node		    USE +12

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	2.1 3 4.15 3.8
	    flags	()
	    autoPanelPos	663 421 0 0
	    node		    USE +10

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	3.3 4.2 5.35 5
	    flags	()
	    autoPanelPos	553 348 0 0
	    node		    USE +11

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	-10.5 5.1 -8.5 5.9
	    flags	()
	    autoPanelPos	78 308 0 0
	    engine		    USE +5

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	-10.8 3.9 -8.8 4.7
	    flags	()
	    autoPanelPos	346 74 0 0
	    engine		    USE +4

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	-11.4 1.2 -8.95108 2
	    flags	()
	    autoPanelPos	-6 441 0 0
	    engine		    USE +3

	}
	SoRadBuilderEngine {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFEngine engine ]
	    placement	-7.8 4.5 -5.04768 5.3
	    flags	()
	    autoPanelPos	279 0 0 0
	    engine		    USE +17

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-5.7 1.8 -3.7 2.6
	    flags	()
	    autoPanelPos	405 231 0 0
	    node		    USE +2

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-3.6 3.3 -1.39 4.1
	    flags	()
	    autoPanelPos	468 553 0 0
	    node		    USE +6

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-1.5 2.1 0.5 2.9
	    flags	SHOW_AUTOPANEL
	    autoPanelPos	29 15 0 0
	    node		    USE +7

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	1.5 0.3 3.61 1.1
	    flags	()
	    autoPanelPos	610 690 385 385
	    node		    USE +8

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-8.7 7.8 -6.7 8.6
	    flags	()
	    autoPanelPos	53 61 0 0
	    node		    USE +13

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-5.4 6.9 -3.31 7.7
	    flags	()
	    autoPanelPos	435 226 0 0
	    node		    USE +16

	}
	SoRadBuilderNode {
	    fields [ SFVec4f placement, SFBitMask flags, SFVec4f autoPanelPos, SFNode node ]
	    placement	-4.5 5.4 -2.29 6.2
	    flags	()
	    autoPanelPos	-15 578 385 385
	    node		    USE +1

	}
    }
}
