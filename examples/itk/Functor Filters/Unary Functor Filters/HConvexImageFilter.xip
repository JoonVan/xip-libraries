#Inventor V2.1 ascii

### 0 ###
SoXipBuilderNode {
    placement	0.449628 7.06536 2.44963 7.86536
    flags	()
    node	    Separator {
    }

}
#addChild "0" "1 2"

### 1 ###
SoXipBuilderNode {
    placement	-1.68453 5.70312 0.315468 6.50312
    flags	()
    autoPanelPos	352 98 0 0
    node	    LightModel {
	model	BASE_COLOR
    }

}

### 2 ###
SoXipBuilderNode {
    placement	0.590742 5.7 3.11852 6.5
    flags	()
    viewPos	289 51 359 666
    autoPanelPos	305 244 385 392
    node	    SoXipViewportGroup {
	fields [ MFVec4f viewports,  ]
	viewports	[ 0 0 1 0.5,
			  0 0.5 1 0.5 ]
    }

}
#addChild "2" "3 9"

### 3 ###
SoXipBuilderNode {
    placement	-3.3 3 -1.3 3.8
    flags	()
    viewPos	825 437 385 392
    node	    Separator {
    }

}
#addChild "3" "4 5 6"

### 4 ###
SoXipBuilderNode {
    placement	-5.7 0.9 -3.7 1.7
    flags	()
    autoPanelPos	63 428 385 392
    node	    Complexity {
	value	1
	textureQuality	1
    }

}

### 5 ###
SoXipBuilderNode {
    placement	-3.10225 0.975236 -1.10225 1.77524
    flags	()
    autoPanelPos	192 620 0 0
    node	    SoXipExaminer {
	viewBoundingBox	1 0 0 0
		0 1 0 0
		0 0 1 0
		0 0 0 1
	complexity		Complexity {
	}

	orthoCamera		DEF +0 OrthographicCamera {
	}

	perspectiveCamera		DEF +1 PerspectiveCamera {
	    position	0.5 0.5 -1.59077
	    orientation	1 0 0  3.14159
	    nearDistance	1.22474
	    farDistance	2.9568
	    focalDistance	2.09077
	    heightAngle	0.785398
	}

	borderNode		SoXipViewportBorder {
	    fields [  ]
	}

	cameraSwitch		Switch {
	    whichChild	1
	    USE +0
	    USE +1
	}

    }

}

### 6 ###
SoXipBuilderNode {
    placement	-0.6 0.9 1.4 1.7
    flags	()
    autoPanelPos	215 605 385 392
    node	    SoXipImage {
	fields [ SoXipSFDataImage image ]
	image	"DATA"
    }

}
#connect "image@6" "Output@7"

### 7 ###
SoXipBuilderEngine {
    placement	-0.771683 -1.2 3.32168 -0.4
    flags	()
    autoPanelPos	38 808 385 392
    engine	    SoItkRescaleIntensityImageFilter {
	inputs [ SoItkSFDataImage Input0, SFFloat OutputMaximum,  ]
	Input0	"DATA"
	OutputMaximum	1
	outputs [ SoItkSFDataImage Output ]
    }

}
#connect "Input0@7" "Output@8"

### 8 ###
SoXipBuilderEngine {
    placement	-5.80146 -1.2 -3.01521 -0.4
    flags	()
    autoPanelPos	51 507 385 392
    engine	    SoItkImageFileReader {
	inputs [ SFString File,  ]
	File	"../../../data/cthead1.png"
	outputs [ SoItkSFDataImage Output, MFShort Dimensions ]
    }

}

### 9 ###
SoXipBuilderNode {
    placement	5.1 3 7.1 3.8
    flags	()
    viewPos	825 437 385 392
    node	    Separator {
    }

}
#addChild "9" "10 11 12"

### 10 ###
SoXipBuilderNode {
    placement	2.7 0.9 4.7 1.7
    flags	()
    autoPanelPos	63 428 385 392
    node	    Complexity {
	value	1
	textureQuality	1
    }

}

### 11 ###
SoXipBuilderNode {
    placement	5.38971 0.881505 7.38971 1.68151
    flags	()
    autoPanelPos	567 637 0 0
    node	    SoXipExaminer {
	viewBoundingBox	1 0 0 0
		0 1 0 0
		0 0 1 0
		0 0 0 1
	complexity		Complexity {
	}

	orthoCamera		DEF +0 OrthographicCamera {
	}

	perspectiveCamera		DEF +1 PerspectiveCamera {
	    position	0.5 0.5 -1.59077
	    orientation	1 0 0  3.14159
	    nearDistance	1.22474
	    farDistance	2.9568
	    focalDistance	2.09077
	    heightAngle	0.785398
	}

	borderNode		SoXipViewportBorder {
	    fields [  ]
	}

	cameraSwitch		Switch {
	    whichChild	1
	    USE +0
	    USE +1
	}

    }

}

### 12 ###
SoXipBuilderNode {
    placement	7.8 0.9 9.8 1.7
    flags	()
    autoPanelPos	480 156 385 392
    node	    SoXipImage {
	fields [ SoXipSFDataImage image ]
	image	"DATA"
    }

}
#connect "image@12" "Output@13"

### 13 ###
SoXipBuilderEngine {
    placement	6.15883 -1.5 9.35784 -0.700001
    flags	()
    autoPanelPos	490 828 385 392
    engine	    SoItkHConvexImageFilter {
	inputs [ SoItkSFDataImage Input0, SFFloat Height,  ]
	Input0	"DATA"
	Height	13
	outputs [ SoItkSFDataImage Output ]
    }

}
#connect "Input0@13" "Output@7"

### packages ###
SoXipBuilderPackage {
    def	0
    members	[ 0, 1, 2, 3, 4, 5, 6, 7,
		      8, 9, 10, 11, 12, 13 ]
    position	2.05 2.5 8.72138
    height	15.2593
    inputs	[  ]
    outputs	[  ]
}

