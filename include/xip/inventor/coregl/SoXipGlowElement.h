/*
Copyright (c) 2011, Siemens Corporate Research a Division of Siemens Corporation 
All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
#ifndef SO_XIP_GLOW_ELEMENT_H
#define SO_XIP_GLOW_ELEMENT_H

//#ifdef WIN32

#include <xip/system/standard.h>
#include <xip/system/GL/gl.h>

//#include <windows.h>
//#ifdef _CRT_ALLOCATION_DEFINED 
//	#include <xip/system/GL/gl.h>
//	#include <xip/system/GL/glext.h>
//#else //only for VC6 compilation
//	#include <GL/gl.h>
//	#include <GL/glext.h>
//	#define xipGlGetProcAddress(X) wglGetProcAddress(X)
//#endif

//#elif defined(linux) || defined(__APPLE__) /* linux */

//#define GL_GLEXT_PROTOTYPES
//#include <xip/system/standard.h>
//#include <xip/system/GL/gl.h>
//#include <GL/gl.h>
//#include <GL/glext.h>
////#include <GL/glxext.h>
    //#define glCopyTexSubImage3D glCopyTexSubImage3DEXT
    //#define glTexImage3D glTexImage3DEXT
    //#define glTexSubImage3D glTexSubImage3DEXT
    //#define glActiveTexture glActiveTextureEXT
    //#define glFramebufferTexture glFramebufferTextureEXT
//#endif /* linux */

#include <Inventor/elements/SoSubElement.h>
#include <xip/inventor/coregl/xipivcoregl.h>

extern XIPIVCOREGL_API bool GLOW_init;
extern XIPIVCOREGL_API bool GLOW_GREMEDY_string_marker;
extern XIPIVCOREGL_API bool GLOW_EXT_framebuffer_object;
extern XIPIVCOREGL_API bool GLOW_ARB_pixel_buffer_object;
extern XIPIVCOREGL_API bool GLOW_ARB_shader_objects;
extern XIPIVCOREGL_API bool GLOW_ARB_fragment_shader;
extern XIPIVCOREGL_API bool GLOW_EXT_geometry_shader4;
extern XIPIVCOREGL_API bool GLOW_ARB_shading_language_100;
extern XIPIVCOREGL_API bool GLOW_EXT_depth_bounds_test;
extern XIPIVCOREGL_API bool GLOW_ARB_texture_non_power_of_two;
extern XIPIVCOREGL_API bool GLOW_ARB_draw_buffers;
extern XIPIVCOREGL_API bool GLOW_EXT_timer_query;
extern XIPIVCOREGL_API bool GLOW_ARB_occlusion_query;

#ifndef WIN32
#ifndef DARWIN
#ifndef linux
extern XIPIVCOREGL_API PFNGLGETQUERYOBJECTI64VEXTPROC	glGetQueryObjecti64vEXT;
extern XIPIVCOREGL_API PFNGLGETQUERYOBJECTUI64VEXTPROC	glGetQueryObjectui64vEXT;

extern XIPIVCOREGL_API PFNGLACTIVETEXTUREPROC				glActiveTexture;
//#endif
extern XIPIVCOREGL_API PFNGLGENQUERIESARBPROC			glGenQueriesARB;
extern XIPIVCOREGL_API PFNGLDELETEQUERIESARBPROC		glDeleteQueriesARB;
extern XIPIVCOREGL_API PFNGLBEGINQUERYARBPROC			glBeginQueryARB;
extern XIPIVCOREGL_API PFNGLENDQUERYARBPROC				glEndQueryARB;
extern XIPIVCOREGL_API PFNGLGETQUERYIVARBPROC			glGetQueryivARB;
extern XIPIVCOREGL_API PFNGLGETQUERYOBJECTIVARBPROC		glGetQueryObjectivARB;
extern XIPIVCOREGL_API PFNGLGETQUERYOBJECTUIVARBPROC	glGetQueryObjectuivARB;

extern XIPIVCOREGL_API PFNGLTEXIMAGE3DEXTPROC glTexImage3D;
extern XIPIVCOREGL_API PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3D;
extern XIPIVCOREGL_API PFNGLCOPYTEXSUBIMAGE3DPROC			glCopyTexSubImage3D;

//extern XIPIVCOREGL_API PFNGLACTIVETEXTUREPROC				glActiveTexture;

//extern XIPIVCOREGL_API PFNGLDRAWRANGEELEMENTSPROC			glDrawRangeElements;
extern XIPIVCOREGL_API PFNGLDRAWBUFFERSPROC                 glDrawBuffers;
extern XIPIVCOREGL_API PFNGLBINDBUFFERPROC					glBindBuffer;
extern XIPIVCOREGL_API PFNGLDELETEBUFFERSPROC				glDeleteBuffers;
extern XIPIVCOREGL_API PFNGLGENBUFFERSPROC					glGenBuffers;
extern XIPIVCOREGL_API PFNGLISBUFFERPROC					glIsBuffer;
extern XIPIVCOREGL_API PFNGLBUFFERDATAPROC					glBufferData;
extern XIPIVCOREGL_API PFNGLBUFFERSUBDATAPROC				glBufferSubData;
extern XIPIVCOREGL_API PFNGLGETBUFFERSUBDATAPROC			glGetBufferSubData;
extern XIPIVCOREGL_API PFNGLMAPBUFFERPROC					glMapBuffer;
extern XIPIVCOREGL_API PFNGLUNMAPBUFFERPROC				    glUnmapBuffer;
extern XIPIVCOREGL_API PFNGLGETBUFFERPARAMETERIVPROC		glGetBufferParamateriv;
extern XIPIVCOREGL_API PFNGLGETBUFFERPOINTERVPROC			glGetBufferPointerv;

extern XIPIVCOREGL_API PFNGLATTACHSHADERPROC				glAttachShader;
extern XIPIVCOREGL_API PFNGLBINDATTRIBLOCATIONPROC			glBindAttribLocation;
extern XIPIVCOREGL_API PFNGLCOMPILESHADERPROC				glCompileShader;
extern XIPIVCOREGL_API PFNGLCREATEPROGRAMPROC				glCreateProgram;
extern XIPIVCOREGL_API PFNGLCREATESHADERPROC				glCreateShader;
extern XIPIVCOREGL_API PFNGLDELETEPROGRAMPROC				glDeleteProgram;
extern XIPIVCOREGL_API PFNGLDELETESHADERPROC				glDeleteShader;
extern XIPIVCOREGL_API PFNGLDETACHSHADERPROC				glDetachShader;
extern XIPIVCOREGL_API PFNGLDISABLEVERTEXATTRIBARRAYPROC	glDisableVertexAttribArray;
extern XIPIVCOREGL_API PFNGLENABLEVERTEXATTRIBARRAYPROC		glEnableVertexAttribArray;
extern XIPIVCOREGL_API PFNGLGETACTIVEATTRIBPROC				glGetActiveAttrib;
extern XIPIVCOREGL_API PFNGLGETACTIVEUNIFORMPROC			glGetActiveUniform;
extern XIPIVCOREGL_API PFNGLGETATTACHEDSHADERSPROC			glGetAttachedShaders;
extern XIPIVCOREGL_API PFNGLGETATTRIBLOCATIONPROC			glGetAttribLocation;
extern XIPIVCOREGL_API PFNGLGETPROGRAMIVPROC				glGetProgramiv;
extern XIPIVCOREGL_API PFNGLGETPROGRAMINFOLOGPROC			glGetProgramInfoLog;
extern XIPIVCOREGL_API PFNGLGETSHADERIVPROC					glGetShaderiv;
extern XIPIVCOREGL_API PFNGLGETSHADERINFOLOGPROC			glGetShaderInfoLog;
extern XIPIVCOREGL_API PFNGLGETSHADERSOURCEPROC				glGetShaderSource;
extern XIPIVCOREGL_API PFNGLGETUNIFORMLOCATIONPROC			glGetUniformLocation;
extern XIPIVCOREGL_API PFNGLGETUNIFORMFVPROC				glGetUniformfv;
extern XIPIVCOREGL_API PFNGLGETUNIFORMIVPROC				glGetUniformiv;
extern XIPIVCOREGL_API PFNGLGETVERTEXATTRIBDVPROC			glGetVertexAttribdv;
extern XIPIVCOREGL_API PFNGLGETVERTEXATTRIBFVPROC			glGetVertexAttribfv;
extern XIPIVCOREGL_API PFNGLGETVERTEXATTRIBIVPROC			glGetVertexAttribiv;
extern XIPIVCOREGL_API PFNGLGETVERTEXATTRIBPOINTERVPROC		glGetVertexAttribPointerv;
extern XIPIVCOREGL_API PFNGLISPROGRAMPROC					glIsProgram;
extern XIPIVCOREGL_API PFNGLISSHADERPROC					glIsShader;
extern XIPIVCOREGL_API PFNGLLINKPROGRAMPROC					glLinkProgram;
extern XIPIVCOREGL_API PFNGLSHADERSOURCEPROC				glShaderSource;
extern XIPIVCOREGL_API PFNGLUSEPROGRAMPROC					glUseProgram;
extern XIPIVCOREGL_API PFNGLUNIFORM1FPROC					glUniform1f;
extern XIPIVCOREGL_API PFNGLUNIFORM2FPROC					glUniform2f;
extern XIPIVCOREGL_API PFNGLUNIFORM3FPROC					glUniform3f;
extern XIPIVCOREGL_API PFNGLUNIFORM4FPROC					glUniform4f;
extern XIPIVCOREGL_API PFNGLUNIFORM1IPROC					glUniform1i;
extern XIPIVCOREGL_API PFNGLUNIFORM2IPROC					glUniform2i;
extern XIPIVCOREGL_API PFNGLUNIFORM3IPROC					glUniform3i;
extern XIPIVCOREGL_API PFNGLUNIFORM4IPROC					glUniform4i;
extern XIPIVCOREGL_API PFNGLUNIFORM1FVPROC					glUniform1fv;
extern XIPIVCOREGL_API PFNGLUNIFORM2FVPROC					glUniform2fv;
extern XIPIVCOREGL_API PFNGLUNIFORM3FVPROC					glUniform3fv;
extern XIPIVCOREGL_API PFNGLUNIFORM4FVPROC					glUniform4fv;
extern XIPIVCOREGL_API PFNGLUNIFORM1IVPROC					glUniform1iv;
extern XIPIVCOREGL_API PFNGLUNIFORM2IVPROC					glUniform2iv;
extern XIPIVCOREGL_API PFNGLUNIFORM3IVPROC					glUniform3iv;
extern XIPIVCOREGL_API PFNGLUNIFORM4IVPROC					glUniform4iv;
extern XIPIVCOREGL_API PFNGLUNIFORMMATRIX2FVPROC			glUniformMatrix2fv;	
extern XIPIVCOREGL_API PFNGLUNIFORMMATRIX3FVPROC			glUniformMatrix3fv;	
extern XIPIVCOREGL_API PFNGLUNIFORMMATRIX4FVPROC			glUniformMatrix4fv;
extern XIPIVCOREGL_API PFNGLVALIDATEPROGRAMPROC				glValidateProgram;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1DPROC				glVertexAttrib1d ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1DVPROC				glVertexAttrib1dv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1FPROC				glVertexAttrib1f ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1FVPROC				glVertexAttrib1fv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1SPROC				glVertexAttrib1s ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB1SVPROC				glVertexAttrib1sv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2DPROC				glVertexAttrib2d ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2DVPROC				glVertexAttrib2dv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2FPROC				glVertexAttrib2f ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2FVPROC				glVertexAttrib2fv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2SPROC				glVertexAttrib2s ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB2SVPROC				glVertexAttrib2sv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3DPROC				glVertexAttrib3d ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3DVPROC				glVertexAttrib3dv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3FPROC				glVertexAttrib3f ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3FVPROC				glVertexAttrib3fv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3SPROC				glVertexAttrib3s ;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB3SVPROC				glVertexAttrib3sv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NBVPROC			glVertexAttrib4Nbv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NIVPROC			glVertexAttrib4Niv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NSVPROC			glVertexAttrib4Nsv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NUBPROC			glVertexAttrib4Nub;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NUBVPROC			glVertexAttrib4Nubv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NUIVPROC			glVertexAttrib4Nuiv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4NUSVPROC			glVertexAttrib4Nusv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4BVPROC				glVertexAttrib4bv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4DPROC				glVertexAttrib4d;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4DVPROC				glVertexAttrib4dv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4FPROC				glVertexAttrib4f;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4FVPROC				glVertexAttrib4fv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4IVPROC				glVertexAttrib4iv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4SPROC				glVertexAttrib4s; 
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4SVPROC				glVertexAttrib4sv; 
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4UBVPROC			glVertexAttrib4ubv; 
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4UIVPROC			glVertexAttrib4uiv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIB4USVPROC			glVertexAttrib4usv;
extern XIPIVCOREGL_API PFNGLVERTEXATTRIBPOINTERPROC			glVertexAttribPointer;

extern XIPIVCOREGL_API PFNGLISRENDERBUFFEREXTPROC						glIsRenderbufferEXT;
extern XIPIVCOREGL_API PFNGLBINDRENDERBUFFEREXTPROC						glBindRenderbufferEXT;
extern XIPIVCOREGL_API PFNGLDELETERENDERBUFFERSEXTPROC					glDeleteRenderbuffersEXT;
extern XIPIVCOREGL_API PFNGLGENRENDERBUFFERSEXTPROC						glGenRenderbuffersEXT;
extern XIPIVCOREGL_API PFNGLRENDERBUFFERSTORAGEEXTPROC					glRenderbufferStorageEXT;
extern XIPIVCOREGL_API PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC			glGetRenderbufferParameterivEXT;
extern XIPIVCOREGL_API PFNGLISFRAMEBUFFEREXTPROC						glIsFramebufferEXT;
extern XIPIVCOREGL_API PFNGLBINDFRAMEBUFFEREXTPROC						glBindFramebufferEXT;
extern XIPIVCOREGL_API PFNGLDELETEFRAMEBUFFERSEXTPROC					glDeleteFramebuffersEXT;
extern XIPIVCOREGL_API PFNGLGENFRAMEBUFFERSEXTPROC						glGenFramebuffersEXT;
extern XIPIVCOREGL_API PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC				glCheckFramebufferStatusEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTURE1DEXTPROC					glFramebufferTexture1DEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTURE2DEXTPROC					glFramebufferTexture2DEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTURE3DEXTPROC					glFramebufferTexture3DEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC				glFramebufferRenderbufferEXT;
extern XIPIVCOREGL_API PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glGetFramebufferAttachmentParameterivEXT;
extern XIPIVCOREGL_API PFNGLGENERATEMIPMAPEXTPROC						glGenerateMipmapEXT;
extern XIPIVCOREGL_API PFNGLPROGRAMPARAMETERIEXTPROC					glProgramParameteriEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTUREEXTPROC					glFramebufferTextureEXT;
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC				glFramebufferTextureLayerEXT; 
extern XIPIVCOREGL_API PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC				glFramebufferTextureFaceEXT; 

extern XIPIVCOREGL_API PFNGLBLENDEQUATIONEXTPROC						glBlendEquationEXT;

extern XIPIVCOREGL_API PFNGLGETHANDLEARBPROC							glGetHandleARB;

extern XIPIVCOREGL_API PFNGLSTRINGMARKERGREMEDYPROC						glStringMarkerGREMEDY;

extern XIPIVCOREGL_API PFNGLDEPTHBOUNDSEXTPROC							glDepthBoundsEXT;
#endif // linux
#endif // DARWIN
#endif // WIN32

class XIPIVCOREGL_API SoXipGLOWElement : public SoElement {
	SO_ELEMENT_HEADER(SoXipGLOWElement);

public:
	static void initClass();

	void init(SoState *state);
	
	inline SbBool matches(const SoElement *elt) const { return true; }
	inline SoElement *copyMatchInfo() const { return (SoXipGLOWElement*)getTypeId().createInstance(); }

private:
	
};
class XIPIVCOREGL_API SoXipGLOW
{
public:
	static void init();
};

int	XIPIVCOREGL_API getPackAlignment(int width);

#endif // SO_XIP_GLOW_ELEMENT_H

